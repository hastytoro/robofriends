{"version":3,"sources":["components/Header.js","components/SearchBox.js","components/Card.js","components/CardList.js","components/Scroll.js","components/ErrorBoundary.js","constants.js","containers/App.js","actions.js","reducers.js","reportWebVitals.js","index.js"],"names":["Header","state","count","nextProps","nextState","this","className","Component","SearchBox","searchField","searchChange","type","placeholder","onChange","Card","id","name","email","alt","src","CardList","robots","map","user","index","Scroll","props","style","overflowY","border","height","children","ErrorBoundary","hasError","error","info","setState","CHANGE_SEARCH_FIELD","REQUEST_ROBOTS_PENDING","REQUEST_ROBOTS_SUCCESS","REQUEST_ROBOTS_FAILED","App","onRequestRobots","onSearchChange","isPending","filteredRobots","filter","robot","toLowerCase","includes","connect","searchRobots","requestRobots","dispatch","event","text","target","value","payload","fetch","then","response","json","data","catch","err","initialStateSearch","initialStateRobots","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","logger","createLogger","rootReducer","combineReducers","action","Object","assign","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.150bd2b6.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nclass Header extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      count: 0,\r\n    };\r\n  }\r\n\r\n  shouldComponentUpdate(nextProps, nextState) {\r\n    if (this.state.count !== nextState.count) {\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  render() {\r\n    return <h1 className=\"f2\">Robot Friends</h1>;\r\n  }\r\n}\r\n\r\nexport default Header;\r\n","import React from 'react';\r\n\r\nconst SearchBox = ({ searchField, searchChange }) => {\r\n  return (\r\n    <div className=\"pa2\">\r\n      <input\r\n        className=\"pa3 ba b--green bg-lightest-blue\"\r\n        type=\"search\"\r\n        placeholder=\"search robots\"\r\n        onChange={searchChange}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchBox;\r\n","import React from 'react';\r\n\r\nconst Card = ({ id, name, email }) => {\r\n  return (\r\n    <div className=\"bg-light-green dib tc br3 pa3 ma2 grow bw2 shadow-5\">\r\n      <img alt=\"robots\" src={`https://robohash.org/${id}?200x200`} />\r\n      <div>\r\n        <h2>{name}</h2>\r\n        <p>{email}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","import React from 'react';\r\nimport Card from './Card';\r\n\r\nconst CardList = ({ robots }) => {\r\n  return (\r\n    <div>\r\n      {robots.map((user, index) => {\r\n        return (\r\n          <Card\r\n            key={index}\r\n            id={robots[index].id}\r\n            name={robots[index].name}\r\n            email={robots[index].email}\r\n          />\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CardList;\r\n","import React from 'react';\r\n\r\nconst Scroll = props => {\r\n  return (\r\n    <div\r\n      style={{\r\n        overflowY: 'scroll',\r\n        border: '5px solid black',\r\n        height: '500px',\r\n      }}\r\n    >\r\n      {props.children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Scroll;\r\n","import React, { Component } from 'react';\r\n\r\nclass ErrorBoundary extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      hasError: false,\r\n    };\r\n  }\r\n\r\n  componentDidCatch(error, info) {\r\n    this.setState({ hasError: true });\r\n  }\r\n\r\n  render() {\r\n    if (this.state.hasError) {\r\n      return <h1>Ooops, that is not good</h1>;\r\n    }\r\n    return this.props.children;\r\n  }\r\n}\r\n\r\nexport default ErrorBoundary;\r\n","export const CHANGE_SEARCH_FIELD = 'CHANGE_SEARCH_FIELD';\r\n\r\nexport const REQUEST_ROBOTS_PENDING = 'REQUEST_ROBOTS_PENDING';\r\nexport const REQUEST_ROBOTS_SUCCESS = 'REQUEST_ROBOTS_SUCCESS';\r\nexport const REQUEST_ROBOTS_FAILED = 'REQUEST_ROBOTS_FAILED';\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Header from '../components/Header';\r\nimport SearchBox from '../components/SearchBox';\r\nimport CardList from '../components/CardList';\r\nimport Scroll from '../components/Scroll';\r\nimport ErrorBoundary from '../components/ErrorBoundary';\r\nimport './App.css';\r\nimport { setSearchField, requestRobots } from '../actions';\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    searchField: state.searchRobots.searchField,\r\n    robots: state.requestRobots.robots,\r\n    isPending: state.requestRobots.isPending,\r\n    error: state.requestRobots.error,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onSearchChange: event => dispatch(setSearchField(event.target.value)),\r\n    onRequestRobots: () => dispatch(requestRobots()),\r\n  };\r\n};\r\n\r\nclass App extends Component {\r\n  componentDidMount() {\r\n    this.props.onRequestRobots();\r\n  }\r\n\r\n  render() {\r\n    const { searchField, onSearchChange, robots, isPending } = this.props;\r\n\r\n    const filteredRobots = robots.filter(robot =>\r\n      robot.name.toLowerCase().includes(searchField.toLowerCase()),\r\n    );\r\n\r\n    if (isPending) {\r\n      return <h1>Loading...</h1>;\r\n    } else {\r\n      return (\r\n        <div className=\"tc\">\r\n          <Header />\r\n          <SearchBox searchChange={onSearchChange} />\r\n          <Scroll>\r\n            <ErrorBoundary>\r\n              <CardList robots={filteredRobots} />\r\n            </ErrorBoundary>\r\n          </Scroll>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\r\n","import {\r\n  CHANGE_SEARCH_FIELD,\r\n  REQUEST_ROBOTS_PENDING,\r\n  REQUEST_ROBOTS_SUCCESS,\r\n  REQUEST_ROBOTS_FAILED,\r\n} from './constants.js';\r\n\r\nexport const setSearchField = text => ({\r\n  type: CHANGE_SEARCH_FIELD,\r\n  payload: text,\r\n});\r\n\r\nexport const requestRobots = () => dispatch => {\r\n  dispatch({ type: REQUEST_ROBOTS_PENDING });\r\n  fetch('https://jsonplaceholder.typicode.com/users')\r\n    .then(response => response.json())\r\n    .then(data => dispatch({ type: REQUEST_ROBOTS_SUCCESS, payload: data }))\r\n    .catch(err => dispatch({ type: REQUEST_ROBOTS_FAILED, payload: err }));\r\n};\r\n","import {\r\n  CHANGE_SEARCH_FIELD,\r\n  REQUEST_ROBOTS_PENDING,\r\n  REQUEST_ROBOTS_SUCCESS,\r\n  REQUEST_ROBOTS_FAILED,\r\n} from './constants.js';\r\n\r\nconst initialStateSearch = {\r\n  searchField: '',\r\n};\r\n\r\nconst initialStateRobots = {\r\n  isPending: false,\r\n  robots: [],\r\n  error: '',\r\n};\r\n\r\nexport const searchRobots = (state = initialStateSearch, action = {}) => {\r\n  switch (action.type) {\r\n    case CHANGE_SEARCH_FIELD:\r\n      return Object.assign({}, state, { searchField: action.payload });\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const requestRobots = (state = initialStateRobots, action = {}) => {\r\n  switch (action.type) {\r\n    case REQUEST_ROBOTS_PENDING:\r\n      return Object.assign({}, state, {\r\n        isPending: true,\r\n      });\r\n    case REQUEST_ROBOTS_SUCCESS:\r\n      return Object.assign({}, state, {\r\n        isPending: false,\r\n        robots: action.payload,\r\n      });\r\n    case REQUEST_ROBOTS_FAILED:\r\n      return Object.assign({}, state, {\r\n        isPending: false,\r\n        error: action.payload,\r\n      });\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware, combineReducers } from 'redux';\nimport { createLogger } from 'redux-logger';\nimport thunkMiddleware from 'redux-thunk';\nimport './index.css';\nimport 'tachyons';\nimport App from './containers/App';\nimport { searchRobots, requestRobots } from './reducers';\nimport reportWebVitals from './reportWebVitals';\n\nconst logger = createLogger();\n\nconst rootReducer = combineReducers({ searchRobots, requestRobots });\n\nconst store = createStore(\n  rootReducer,\n  applyMiddleware(thunkMiddleware, logger),\n);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root'),\n);\nreportWebVitals();\n"],"sourceRoot":""}